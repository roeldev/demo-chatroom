// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file api/v1/apiv1.proto (package api.v1, edition 2023)
// option features.field_presence = IMPLICIT;
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_duration, file_google_protobuf_empty, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/v1/apiv1.proto.
 */
export const file_api_v1_apiv1: GenFile = /*@__PURE__*/
  fileDesc("ChJhcGkvdjEvYXBpdjEucHJvdG8SBmFwaS52MSIVCgRVVUlEEg0KBXZhbHVlGAEgASgJIhYKBUNvbG9yEg0KBXZhbHVlGAEgASgJImsKC1VzZXJEZXRhaWxzEgwKBG5hbWUYASABKAkSEAoIaW5pdGlhbHMYAiABKAkSHQoGY29sb3IxGAMgASgLMg0uYXBpLnYxLkNvbG9yEh0KBmNvbG9yMhgEIAEoCzINLmFwaS52MS5Db2xvciI/CgtVc2VyTWVudGlvbhIdCgd1c2VyX2lkGAEgASgLMgwuYXBpLnYxLlVVSUQSEQoJdXNlcl9uYW1lGAIgASgJIkoKBkNoYXRJRBIhCgtyZWNlaXZlcl9pZBgBIAEoCzIMLmFwaS52MS5VVUlEEh0KB2NoYXRfaWQYAiABKAsyDC5hcGkudjEuVVVJRCJRCgtKb2luUmVxdWVzdBIhCgR1c2VyGAEgASgLMhMuYXBpLnYxLlVzZXJEZXRhaWxzEh8KBWZsYWdzGAIgASgOMhAuYXBpLnYxLlVzZXJGbGFnIh0KDEpvaW5SZXNwb25zZRINCgV0b2tlbhgBIAEoCSIeCg1SZW5ld1Jlc3BvbnNlEg0KBXRva2VuGAEgASgJIv4BChNBY3RpdmVVc2Vyc1Jlc3BvbnNlEigKBHRpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KBXVzZXJzGAIgAygLMiAuYXBpLnYxLkFjdGl2ZVVzZXJzUmVzcG9uc2UuVXNlchqLAQoEVXNlchIYCgJpZBgBIAEoCzIMLmFwaS52MS5VVUlEEiQKB2RldGFpbHMYAiABKAsyEy5hcGkudjEuVXNlckRldGFpbHMSHwoFZmxhZ3MYAyABKA4yEC5hcGkudjEuVXNlckZsYWcSIgoGc3RhdHVzGAQgASgOMhIuYXBpLnYxLlVzZXJTdGF0dXMiPAoUVXBkYXRlRGV0YWlsc1JlcXVlc3QSJAoHZGV0YWlscxgBIAEoCzITLmFwaS52MS5Vc2VyRGV0YWlscyI5ChNVcGRhdGVTdGF0dXNSZXF1ZXN0EiIKBnN0YXR1cxgBIAEoDjISLmFwaS52MS5Vc2VyU3RhdHVzIkoKFUluZGljYXRlVHlwaW5nUmVxdWVzdBIhCgtyZWNlaXZlcl9pZBgBIAEoCzIMLmFwaS52MS5VVUlEEg4KBnR5cGluZxgCIAEoCCK4AQoPU2VuZENoYXRSZXF1ZXN0EigKBHRpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiEKC3JlY2VpdmVyX2lkGAIgASgLMgwuYXBpLnYxLlVVSUQSIwoNcmVwbHlfY2hhdF9pZBgDIAEoCzIMLmFwaS52MS5VVUlEEgwKBHRleHQYBCABKAkSJQoIbWVudGlvbnMYBSADKAsyEy5hcGkudjEuVXNlck1lbnRpb24iZwoPRWRpdENoYXRSZXF1ZXN0EigKBHRpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhwKBGNoYXQYAiABKAsyDi5hcGkudjEuQ2hhdElEEgwKBHRleHQYAyABKAkidwoRRW1vamlSZXBseVJlcXVlc3QSKAoEdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASHAoEY2hhdBgCIAEoCzIOLmFwaS52MS5DaGF0SUQSDQoFZW1vamkYAyABKAwSCwoDYWRkGAQgASgIIksKCUV2ZW50VXNlchIYCgJpZBgBIAEoCzIMLmFwaS52MS5VVUlEEiQKB2RldGFpbHMYAiABKAsyEy5hcGkudjEuVXNlckRldGFpbHMiVgoVUHJldmlvdXNFdmVudHNSZXF1ZXN0Ei4KCnVudGlsX3RpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEg0KBWxpbWl0GAIgASgEItICChZQcmV2aW91c0V2ZW50c1Jlc3BvbnNlEj0KB2hpc3RvcnkYASADKAsyLC5hcGkudjEuUHJldmlvdXNFdmVudHNSZXNwb25zZS5QcmV2aW91c0V2ZW50GvgBCg1QcmV2aW91c0V2ZW50EigKBHRpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEioKCXVzZXJfam9pbhgKIAEoCzIVLmFwaS52MS5Vc2VySm9pbkV2ZW50SAASLAoKdXNlcl9sZWF2ZRgLIAEoCzIWLmFwaS52MS5Vc2VyTGVhdmVFdmVudEgAEi4KC3VzZXJfdXBkYXRlGAwgASgLMhcuYXBpLnYxLlVzZXJVcGRhdGVFdmVudEgAEioKCWNoYXRfc2VudBgUIAEoCzIVLmFwaS52MS5DaGF0U2VudEV2ZW50SABCBwoFZXZlbnQiPgoSRXZlbnRTdHJlYW1SZXF1ZXN0Eg8KBXN0YXJ0GAEgASgJSAASDQoDYWNrGAIgASgJSABCCAoGc3RyZWFtIroDChNFdmVudFN0cmVhbVJlc3BvbnNlEigKBHRpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEioKCXVzZXJfam9pbhgKIAEoCzIVLmFwaS52MS5Vc2VySm9pbkV2ZW50SAASLAoKdXNlcl9sZWF2ZRgLIAEoCzIWLmFwaS52MS5Vc2VyTGVhdmVFdmVudEgAEi4KC3VzZXJfdXBkYXRlGAwgASgLMhcuYXBpLnYxLlVzZXJVcGRhdGVFdmVudEgAEi4KC3VzZXJfc3RhdHVzGA0gASgLMhcuYXBpLnYxLlVzZXJTdGF0dXNFdmVudEgAEi4KC3VzZXJfdHlwaW5nGA4gASgLMhcuYXBpLnYxLlVzZXJUeXBpbmdFdmVudEgAEioKCWNoYXRfc2VudBgUIAEoCzIVLmFwaS52MS5DaGF0U2VudEV2ZW50SAASKgoJY2hhdF9lZGl0GBUgASgLMhUuYXBpLnYxLkNoYXRFZGl0RXZlbnRIABIuCgtlbW9qaV9yZXBseRgWIAEoCzIXLmFwaS52MS5FbW9qaVJlcGx5RXZlbnRIAEIHCgVldmVudCJRCg1Vc2VySm9pbkV2ZW50Eh8KBHVzZXIYASABKAsyES5hcGkudjEuRXZlbnRVc2VyEh8KBWZsYWdzGAIgASgOMhAuYXBpLnYxLlVzZXJGbGFnIlYKDlVzZXJMZWF2ZUV2ZW50Eh8KBHVzZXIYASABKAsyES5hcGkudjEuRXZlbnRVc2VyEiMKBnJlYXNvbhgCIAEoDjITLmFwaS52MS5MZWF2ZVJlYXNvbiJXCg9Vc2VyVXBkYXRlRXZlbnQSHwoEdXNlchgBIAEoCzIRLmFwaS52MS5FdmVudFVzZXISIwoGYmVmb3JlGAIgASgLMhMuYXBpLnYxLlVzZXJEZXRhaWxzInoKD1VzZXJTdGF0dXNFdmVudBIfCgR1c2VyGAEgASgLMhEuYXBpLnYxLkV2ZW50VXNlchIiCgZzdGF0dXMYAiABKA4yEi5hcGkudjEuVXNlclN0YXR1cxIiCgZiZWZvcmUYAyABKA4yEi5hcGkudjEuVXNlclN0YXR1cyJlCg9Vc2VyVHlwaW5nRXZlbnQSHwoEdXNlchgBIAEoCzIRLmFwaS52MS5FdmVudFVzZXISIQoLcmVjZWl2ZXJfaWQYAiABKAsyDC5hcGkudjEuVVVJRBIOCgZ0eXBpbmcYAyABKAgi2QMKDUNoYXRTZW50RXZlbnQSHQoHY2hhdF9pZBgBIAEoCzIMLmFwaS52MS5VVUlEEh8KBHVzZXIYAiABKAsyES5hcGkudjEuRXZlbnRVc2VyEiEKC3JlY2VpdmVyX2lkGAMgASgLMgwuYXBpLnYxLlVVSUQSIwoNcmVwbHlfY2hhdF9pZBgEIAEoCzIMLmFwaS52MS5VVUlEEgwKBHRleHQYBSABKAkSLQoJdGV4dF9lZGl0GAYgASgLMhouYXBpLnYxLkNoYXRTZW50RXZlbnQuRWRpdBIlCghtZW50aW9ucxgHIAMoCzITLmFwaS52MS5Vc2VyTWVudGlvbhIwCgZlbW9qaXMYCCADKAsyIC5hcGkudjEuQ2hhdFNlbnRFdmVudC5FbW9qaVJlcGx5GkIKBEVkaXQSKAoEdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEAoIb3JpZ2luYWwYAiABKAkaZgoKRW1vamlSZXBseRIoCgR0aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIfCgR1c2VyGAIgASgLMhEuYXBpLnYxLkV2ZW50VXNlchINCgVlbW9qaRgDIAEoDCJcCg1DaGF0RWRpdEV2ZW50Eh8KBHVzZXIYASABKAsyES5hcGkudjEuRXZlbnRVc2VyEhwKBGNoYXQYAiABKAsyDi5hcGkudjEuQ2hhdElEEgwKBHRleHQYAyABKAkibAoPRW1vamlSZXBseUV2ZW50Eh8KBHVzZXIYASABKAsyES5hcGkudjEuRXZlbnRVc2VyEhwKBGNoYXQYAiABKAsyDi5hcGkudjEuQ2hhdElEEg0KBWVtb2ppGAMgASgMEgsKA2FkZBgEIAEoCCpJCghVc2VyRmxhZxISCg5VU0VSX0ZMQUdfTk9ORRAAEhQKEFVTRVJfRkxBR19JU19CT1QQARITCg9VU0VSX0ZMQUdfTk9fRE0QAipvCgpVc2VyU3RhdHVzEhcKE1VTRVJfU1RBVFVTX0RFRkFVTFQQABIcChhVU0VSX1NUQVRVU19VTlJFU1BPTlNJVkUQARIUChBVU0VSX1NUQVRVU19CVVNZEAISFAoQVVNFUl9TVEFUVVNfQVdBWRADKkoKC0xlYXZlUmVhc29uEhwKGExFQVZFX1JFQVNPTl9VU0VSX0FDVElPThAAEh0KGUxFQVZFX1JFQVNPTl9ESVNDT05ORUNURUQQATL4AQoLQXV0aFNlcnZpY2USMwoESm9pbhITLmFwaS52MS5Kb2luUmVxdWVzdBoULmFwaS52MS5Kb2luUmVzcG9uc2UiABI/CglLZWVwYWxpdmUSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiACgBEjgKBVJlbmV3EhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhUuYXBpLnYxLlJlbmV3UmVzcG9uc2UiABI5CgVMZWF2ZRIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAMlcKD1JlZ2lzdHJ5U2VydmljZRJECgtBY3RpdmVVc2VycxIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRobLmFwaS52MS5BY3RpdmVVc2Vyc1Jlc3BvbnNlIgAyqQMKC1VzZXJTZXJ2aWNlEkcKDVVwZGF0ZURldGFpbHMSHC5hcGkudjEuVXBkYXRlRGV0YWlsc1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJFCgxVcGRhdGVTdGF0dXMSGy5hcGkudjEuVXBkYXRlU3RhdHVzUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkkKDkluZGljYXRlVHlwaW5nEh0uYXBpLnYxLkluZGljYXRlVHlwaW5nUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEj0KCFNlbmRDaGF0EhcuYXBpLnYxLlNlbmRDaGF0UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEj0KCEVkaXRDaGF0EhcuYXBpLnYxLkVkaXRDaGF0UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkEKCkVtb2ppUmVwbHkSGS5hcGkudjEuRW1vamlSZXBseVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiADKqAQoNRXZlbnRzU2VydmljZRJRCg5QcmV2aW91c0V2ZW50cxIdLmFwaS52MS5QcmV2aW91c0V2ZW50c1JlcXVlc3QaHi5hcGkudjEuUHJldmlvdXNFdmVudHNSZXNwb25zZSIAEkYKC0V2ZW50U3RyZWFtEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhsuYXBpLnYxLkV2ZW50U3RyZWFtUmVzcG9uc2UiADABQjRaLWdpdGh1Yi5jb20vcm9lbGRldi9kZW1vLWNoYXRyb29tL2FwaS92MTthcGl2MZIDAggCYghlZGl0aW9uc3DoBw", [file_google_protobuf_any, file_google_protobuf_empty, file_google_protobuf_duration, file_google_protobuf_timestamp]);

/**
 * //////////////////////////////////////////////////////////////////////////////
 * General messages
 *
 * @generated from message api.v1.UUID
 */
export type UUID = Message<"api.v1.UUID"> & {
  /**
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message api.v1.UUID.
 * Use `create(UUIDSchema)` to create a new message.
 */
export const UUIDSchema: GenMessage<UUID> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 0);

/**
 * @generated from message api.v1.Color
 */
export type Color = Message<"api.v1.Color"> & {
  /**
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message api.v1.Color.
 * Use `create(ColorSchema)` to create a new message.
 */
export const ColorSchema: GenMessage<Color> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 1);

/**
 * @generated from message api.v1.UserDetails
 */
export type UserDetails = Message<"api.v1.UserDetails"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * max 3 chars
   *
   * @generated from field: string initials = 2;
   */
  initials: string;

  /**
   * avatar background
   *
   * @generated from field: api.v1.Color color1 = 3;
   */
  color1?: Color;

  /**
   * avatar text
   *
   * @generated from field: api.v1.Color color2 = 4;
   */
  color2?: Color;
};

/**
 * Describes the message api.v1.UserDetails.
 * Use `create(UserDetailsSchema)` to create a new message.
 */
export const UserDetailsSchema: GenMessage<UserDetails> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 2);

/**
 * @generated from message api.v1.UserMention
 */
export type UserMention = Message<"api.v1.UserMention"> & {
  /**
   * @generated from field: api.v1.UUID user_id = 1;
   */
  userId?: UUID;

  /**
   * @generated from field: string user_name = 2;
   */
  userName: string;
};

/**
 * Describes the message api.v1.UserMention.
 * Use `create(UserMentionSchema)` to create a new message.
 */
export const UserMentionSchema: GenMessage<UserMention> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 3);

/**
 * @generated from message api.v1.ChatID
 */
export type ChatID = Message<"api.v1.ChatID"> & {
  /**
   * empty = global chatroom
   *
   * @generated from field: api.v1.UUID receiver_id = 1;
   */
  receiverId?: UUID;

  /**
   * @generated from field: api.v1.UUID chat_id = 2;
   */
  chatId?: UUID;
};

/**
 * Describes the message api.v1.ChatID.
 * Use `create(ChatIDSchema)` to create a new message.
 */
export const ChatIDSchema: GenMessage<ChatID> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 4);

/**
 * @generated from message api.v1.JoinRequest
 */
export type JoinRequest = Message<"api.v1.JoinRequest"> & {
  /**
   * @generated from field: api.v1.UserDetails user = 1;
   */
  user?: UserDetails;

  /**
   * @generated from field: api.v1.UserFlag flags = 2;
   */
  flags: UserFlag;
};

/**
 * Describes the message api.v1.JoinRequest.
 * Use `create(JoinRequestSchema)` to create a new message.
 */
export const JoinRequestSchema: GenMessage<JoinRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 5);

/**
 * @generated from message api.v1.JoinResponse
 */
export type JoinResponse = Message<"api.v1.JoinResponse"> & {
  /**
   * @generated from field: string token = 1;
   */
  token: string;
};

/**
 * Describes the message api.v1.JoinResponse.
 * Use `create(JoinResponseSchema)` to create a new message.
 */
export const JoinResponseSchema: GenMessage<JoinResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 6);

/**
 * @generated from message api.v1.RenewResponse
 */
export type RenewResponse = Message<"api.v1.RenewResponse"> & {
  /**
   * @generated from field: string token = 1;
   */
  token: string;
};

/**
 * Describes the message api.v1.RenewResponse.
 * Use `create(RenewResponseSchema)` to create a new message.
 */
export const RenewResponseSchema: GenMessage<RenewResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 7);

/**
 * @generated from message api.v1.ActiveUsersResponse
 */
export type ActiveUsersResponse = Message<"api.v1.ActiveUsersResponse"> & {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * @generated from field: repeated api.v1.ActiveUsersResponse.User users = 2;
   */
  users: ActiveUsersResponse_User[];
};

/**
 * Describes the message api.v1.ActiveUsersResponse.
 * Use `create(ActiveUsersResponseSchema)` to create a new message.
 */
export const ActiveUsersResponseSchema: GenMessage<ActiveUsersResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 8);

/**
 * @generated from message api.v1.ActiveUsersResponse.User
 */
export type ActiveUsersResponse_User = Message<"api.v1.ActiveUsersResponse.User"> & {
  /**
   * @generated from field: api.v1.UUID id = 1;
   */
  id?: UUID;

  /**
   * @generated from field: api.v1.UserDetails details = 2;
   */
  details?: UserDetails;

  /**
   * @generated from field: api.v1.UserFlag flags = 3;
   */
  flags: UserFlag;

  /**
   * @generated from field: api.v1.UserStatus status = 4;
   */
  status: UserStatus;
};

/**
 * Describes the message api.v1.ActiveUsersResponse.User.
 * Use `create(ActiveUsersResponse_UserSchema)` to create a new message.
 */
export const ActiveUsersResponse_UserSchema: GenMessage<ActiveUsersResponse_User> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 8, 0);

/**
 * @generated from message api.v1.UpdateDetailsRequest
 */
export type UpdateDetailsRequest = Message<"api.v1.UpdateDetailsRequest"> & {
  /**
   * @generated from field: api.v1.UserDetails details = 1;
   */
  details?: UserDetails;
};

/**
 * Describes the message api.v1.UpdateDetailsRequest.
 * Use `create(UpdateDetailsRequestSchema)` to create a new message.
 */
export const UpdateDetailsRequestSchema: GenMessage<UpdateDetailsRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 9);

/**
 * @generated from message api.v1.UpdateStatusRequest
 */
export type UpdateStatusRequest = Message<"api.v1.UpdateStatusRequest"> & {
  /**
   * @generated from field: api.v1.UserStatus status = 1;
   */
  status: UserStatus;
};

/**
 * Describes the message api.v1.UpdateStatusRequest.
 * Use `create(UpdateStatusRequestSchema)` to create a new message.
 */
export const UpdateStatusRequestSchema: GenMessage<UpdateStatusRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 10);

/**
 * @generated from message api.v1.IndicateTypingRequest
 */
export type IndicateTypingRequest = Message<"api.v1.IndicateTypingRequest"> & {
  /**
   * empty = global chatroom
   *
   * @generated from field: api.v1.UUID receiver_id = 1;
   */
  receiverId?: UUID;

  /**
   * @generated from field: bool typing = 2;
   */
  typing: boolean;
};

/**
 * Describes the message api.v1.IndicateTypingRequest.
 * Use `create(IndicateTypingRequestSchema)` to create a new message.
 */
export const IndicateTypingRequestSchema: GenMessage<IndicateTypingRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 11);

/**
 * @generated from message api.v1.SendChatRequest
 */
export type SendChatRequest = Message<"api.v1.SendChatRequest"> & {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * empty = global chatroom
   *
   * @generated from field: api.v1.UUID receiver_id = 2;
   */
  receiverId?: UUID;

  /**
   * empty = no reply = new chat
   *
   * @generated from field: api.v1.UUID reply_chat_id = 3;
   */
  replyChatId?: UUID;

  /**
   * @generated from field: string text = 4;
   */
  text: string;

  /**
   * @generated from field: repeated api.v1.UserMention mentions = 5;
   */
  mentions: UserMention[];
};

/**
 * Describes the message api.v1.SendChatRequest.
 * Use `create(SendChatRequestSchema)` to create a new message.
 */
export const SendChatRequestSchema: GenMessage<SendChatRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 12);

/**
 * @generated from message api.v1.EditChatRequest
 */
export type EditChatRequest = Message<"api.v1.EditChatRequest"> & {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * @generated from field: api.v1.ChatID chat = 2;
   */
  chat?: ChatID;

  /**
   * @generated from field: string text = 3;
   */
  text: string;
};

/**
 * Describes the message api.v1.EditChatRequest.
 * Use `create(EditChatRequestSchema)` to create a new message.
 */
export const EditChatRequestSchema: GenMessage<EditChatRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 13);

/**
 * @generated from message api.v1.EmojiReplyRequest
 */
export type EmojiReplyRequest = Message<"api.v1.EmojiReplyRequest"> & {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * @generated from field: api.v1.ChatID chat = 2;
   */
  chat?: ChatID;

  /**
   * @generated from field: bytes emoji = 3;
   */
  emoji: Uint8Array;

  /**
   * true = add, false = remove
   *
   * @generated from field: bool add = 4;
   */
  add: boolean;
};

/**
 * Describes the message api.v1.EmojiReplyRequest.
 * Use `create(EmojiReplyRequestSchema)` to create a new message.
 */
export const EmojiReplyRequestSchema: GenMessage<EmojiReplyRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 14);

/**
 * @generated from message api.v1.EventUser
 */
export type EventUser = Message<"api.v1.EventUser"> & {
  /**
   * @generated from field: api.v1.UUID id = 1;
   */
  id?: UUID;

  /**
   * @generated from field: api.v1.UserDetails details = 2;
   */
  details?: UserDetails;
};

/**
 * Describes the message api.v1.EventUser.
 * Use `create(EventUserSchema)` to create a new message.
 */
export const EventUserSchema: GenMessage<EventUser> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 15);

/**
 * @generated from message api.v1.PreviousEventsRequest
 */
export type PreviousEventsRequest = Message<"api.v1.PreviousEventsRequest"> & {
  /**
   * @generated from field: google.protobuf.Timestamp until_time = 1;
   */
  untilTime?: Timestamp;

  /**
   * @generated from field: uint64 limit = 2;
   */
  limit: bigint;
};

/**
 * Describes the message api.v1.PreviousEventsRequest.
 * Use `create(PreviousEventsRequestSchema)` to create a new message.
 */
export const PreviousEventsRequestSchema: GenMessage<PreviousEventsRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 16);

/**
 * @generated from message api.v1.PreviousEventsResponse
 */
export type PreviousEventsResponse = Message<"api.v1.PreviousEventsResponse"> & {
  /**
   * @generated from field: repeated api.v1.PreviousEventsResponse.PreviousEvent history = 1;
   */
  history: PreviousEventsResponse_PreviousEvent[];
};

/**
 * Describes the message api.v1.PreviousEventsResponse.
 * Use `create(PreviousEventsResponseSchema)` to create a new message.
 */
export const PreviousEventsResponseSchema: GenMessage<PreviousEventsResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 17);

/**
 * @generated from message api.v1.PreviousEventsResponse.PreviousEvent
 */
export type PreviousEventsResponse_PreviousEvent = Message<"api.v1.PreviousEventsResponse.PreviousEvent"> & {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * @generated from oneof api.v1.PreviousEventsResponse.PreviousEvent.event
   */
  event: {
    /**
     * @generated from field: api.v1.UserJoinEvent user_join = 10;
     */
    value: UserJoinEvent;
    case: "userJoin";
  } | {
    /**
     * @generated from field: api.v1.UserLeaveEvent user_leave = 11;
     */
    value: UserLeaveEvent;
    case: "userLeave";
  } | {
    /**
     * @generated from field: api.v1.UserUpdateEvent user_update = 12;
     */
    value: UserUpdateEvent;
    case: "userUpdate";
  } | {
    /**
     * @generated from field: api.v1.ChatSentEvent chat_sent = 20;
     */
    value: ChatSentEvent;
    case: "chatSent";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message api.v1.PreviousEventsResponse.PreviousEvent.
 * Use `create(PreviousEventsResponse_PreviousEventSchema)` to create a new message.
 */
export const PreviousEventsResponse_PreviousEventSchema: GenMessage<PreviousEventsResponse_PreviousEvent> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 17, 0);

/**
 * @generated from message api.v1.EventStreamRequest
 */
export type EventStreamRequest = Message<"api.v1.EventStreamRequest"> & {
  /**
   * @generated from oneof api.v1.EventStreamRequest.stream
   */
  stream: {
    /**
     * @generated from field: string start = 1;
     */
    value: string;
    case: "start";
  } | {
    /**
     * @generated from field: string ack = 2;
     */
    value: string;
    case: "ack";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message api.v1.EventStreamRequest.
 * Use `create(EventStreamRequestSchema)` to create a new message.
 */
export const EventStreamRequestSchema: GenMessage<EventStreamRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 18);

/**
 * @generated from message api.v1.EventStreamResponse
 */
export type EventStreamResponse = Message<"api.v1.EventStreamResponse"> & {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * @generated from oneof api.v1.EventStreamResponse.event
   */
  event: {
    /**
     * @generated from field: api.v1.UserJoinEvent user_join = 10;
     */
    value: UserJoinEvent;
    case: "userJoin";
  } | {
    /**
     * @generated from field: api.v1.UserLeaveEvent user_leave = 11;
     */
    value: UserLeaveEvent;
    case: "userLeave";
  } | {
    /**
     * @generated from field: api.v1.UserUpdateEvent user_update = 12;
     */
    value: UserUpdateEvent;
    case: "userUpdate";
  } | {
    /**
     * @generated from field: api.v1.UserStatusEvent user_status = 13;
     */
    value: UserStatusEvent;
    case: "userStatus";
  } | {
    /**
     * @generated from field: api.v1.UserTypingEvent user_typing = 14;
     */
    value: UserTypingEvent;
    case: "userTyping";
  } | {
    /**
     * @generated from field: api.v1.ChatSentEvent chat_sent = 20;
     */
    value: ChatSentEvent;
    case: "chatSent";
  } | {
    /**
     * @generated from field: api.v1.ChatEditEvent chat_edit = 21;
     */
    value: ChatEditEvent;
    case: "chatEdit";
  } | {
    /**
     * @generated from field: api.v1.EmojiReplyEvent emoji_reply = 22;
     */
    value: EmojiReplyEvent;
    case: "emojiReply";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message api.v1.EventStreamResponse.
 * Use `create(EventStreamResponseSchema)` to create a new message.
 */
export const EventStreamResponseSchema: GenMessage<EventStreamResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 19);

/**
 * User joins
 *
 * @generated from message api.v1.UserJoinEvent
 */
export type UserJoinEvent = Message<"api.v1.UserJoinEvent"> & {
  /**
   * @generated from field: api.v1.EventUser user = 1;
   */
  user?: EventUser;

  /**
   * @generated from field: api.v1.UserFlag flags = 2;
   */
  flags: UserFlag;
};

/**
 * Describes the message api.v1.UserJoinEvent.
 * Use `create(UserJoinEventSchema)` to create a new message.
 */
export const UserJoinEventSchema: GenMessage<UserJoinEvent> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 20);

/**
 * User leaves
 *
 * @generated from message api.v1.UserLeaveEvent
 */
export type UserLeaveEvent = Message<"api.v1.UserLeaveEvent"> & {
  /**
   * @generated from field: api.v1.EventUser user = 1;
   */
  user?: EventUser;

  /**
   * @generated from field: api.v1.LeaveReason reason = 2;
   */
  reason: LeaveReason;
};

/**
 * Describes the message api.v1.UserLeaveEvent.
 * Use `create(UserLeaveEventSchema)` to create a new message.
 */
export const UserLeaveEventSchema: GenMessage<UserLeaveEvent> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 21);

/**
 * User update's its details
 *
 * @generated from message api.v1.UserUpdateEvent
 */
export type UserUpdateEvent = Message<"api.v1.UserUpdateEvent"> & {
  /**
   * @generated from field: api.v1.EventUser user = 1;
   */
  user?: EventUser;

  /**
   * @generated from field: api.v1.UserDetails before = 2;
   */
  before?: UserDetails;
};

/**
 * Describes the message api.v1.UserUpdateEvent.
 * Use `create(UserUpdateEventSchema)` to create a new message.
 */
export const UserUpdateEventSchema: GenMessage<UserUpdateEvent> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 22);

/**
 * User status is changed
 *
 * @generated from message api.v1.UserStatusEvent
 */
export type UserStatusEvent = Message<"api.v1.UserStatusEvent"> & {
  /**
   * @generated from field: api.v1.EventUser user = 1;
   */
  user?: EventUser;

  /**
   * @generated from field: api.v1.UserStatus status = 2;
   */
  status: UserStatus;

  /**
   * @generated from field: api.v1.UserStatus before = 3;
   */
  before: UserStatus;
};

/**
 * Describes the message api.v1.UserStatusEvent.
 * Use `create(UserStatusEventSchema)` to create a new message.
 */
export const UserStatusEventSchema: GenMessage<UserStatusEvent> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 23);

/**
 * User is typing a message
 *
 * @generated from message api.v1.UserTypingEvent
 */
export type UserTypingEvent = Message<"api.v1.UserTypingEvent"> & {
  /**
   * @generated from field: api.v1.EventUser user = 1;
   */
  user?: EventUser;

  /**
   * empty = global chatroom
   *
   * @generated from field: api.v1.UUID receiver_id = 2;
   */
  receiverId?: UUID;

  /**
   * @generated from field: bool typing = 3;
   */
  typing: boolean;
};

/**
 * Describes the message api.v1.UserTypingEvent.
 * Use `create(UserTypingEventSchema)` to create a new message.
 */
export const UserTypingEventSchema: GenMessage<UserTypingEvent> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 24);

/**
 * User sends chat message
 *
 * @generated from message api.v1.ChatSentEvent
 */
export type ChatSentEvent = Message<"api.v1.ChatSentEvent"> & {
  /**
   * id of this chat
   *
   * @generated from field: api.v1.UUID chat_id = 1;
   */
  chatId?: UUID;

  /**
   * @generated from field: api.v1.EventUser user = 2;
   */
  user?: EventUser;

  /**
   * @generated from field: api.v1.UUID receiver_id = 3;
   */
  receiverId?: UUID;

  /**
   * @generated from field: api.v1.UUID reply_chat_id = 4;
   */
  replyChatId?: UUID;

  /**
   * @generated from field: string text = 5;
   */
  text: string;

  /**
   * @generated from field: api.v1.ChatSentEvent.Edit text_edit = 6;
   */
  textEdit?: ChatSentEvent_Edit;

  /**
   * @generated from field: repeated api.v1.UserMention mentions = 7;
   */
  mentions: UserMention[];

  /**
   * @generated from field: repeated api.v1.ChatSentEvent.EmojiReply emojis = 8;
   */
  emojis: ChatSentEvent_EmojiReply[];
};

/**
 * Describes the message api.v1.ChatSentEvent.
 * Use `create(ChatSentEventSchema)` to create a new message.
 */
export const ChatSentEventSchema: GenMessage<ChatSentEvent> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 25);

/**
 * @generated from message api.v1.ChatSentEvent.Edit
 */
export type ChatSentEvent_Edit = Message<"api.v1.ChatSentEvent.Edit"> & {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * @generated from field: string original = 2;
   */
  original: string;
};

/**
 * Describes the message api.v1.ChatSentEvent.Edit.
 * Use `create(ChatSentEvent_EditSchema)` to create a new message.
 */
export const ChatSentEvent_EditSchema: GenMessage<ChatSentEvent_Edit> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 25, 0);

/**
 * @generated from message api.v1.ChatSentEvent.EmojiReply
 */
export type ChatSentEvent_EmojiReply = Message<"api.v1.ChatSentEvent.EmojiReply"> & {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * @generated from field: api.v1.EventUser user = 2;
   */
  user?: EventUser;

  /**
   * @generated from field: bytes emoji = 3;
   */
  emoji: Uint8Array;
};

/**
 * Describes the message api.v1.ChatSentEvent.EmojiReply.
 * Use `create(ChatSentEvent_EmojiReplySchema)` to create a new message.
 */
export const ChatSentEvent_EmojiReplySchema: GenMessage<ChatSentEvent_EmojiReply> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 25, 1);

/**
 * @generated from message api.v1.ChatEditEvent
 */
export type ChatEditEvent = Message<"api.v1.ChatEditEvent"> & {
  /**
   * @generated from field: api.v1.EventUser user = 1;
   */
  user?: EventUser;

  /**
   * @generated from field: api.v1.ChatID chat = 2;
   */
  chat?: ChatID;

  /**
   * @generated from field: string text = 3;
   */
  text: string;
};

/**
 * Describes the message api.v1.ChatEditEvent.
 * Use `create(ChatEditEventSchema)` to create a new message.
 */
export const ChatEditEventSchema: GenMessage<ChatEditEvent> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 26);

/**
 * @generated from message api.v1.EmojiReplyEvent
 */
export type EmojiReplyEvent = Message<"api.v1.EmojiReplyEvent"> & {
  /**
   * @generated from field: api.v1.EventUser user = 1;
   */
  user?: EventUser;

  /**
   * @generated from field: api.v1.ChatID chat = 2;
   */
  chat?: ChatID;

  /**
   * @generated from field: bytes emoji = 3;
   */
  emoji: Uint8Array;

  /**
   * true = add, false = remove
   *
   * @generated from field: bool add = 4;
   */
  add: boolean;
};

/**
 * Describes the message api.v1.EmojiReplyEvent.
 * Use `create(EmojiReplyEventSchema)` to create a new message.
 */
export const EmojiReplyEventSchema: GenMessage<EmojiReplyEvent> = /*@__PURE__*/
  messageDesc(file_api_v1_apiv1, 27);

/**
 * @generated from enum api.v1.UserFlag
 */
export enum UserFlag {
  /**
   * @generated from enum value: USER_FLAG_NONE = 0;
   */
  NONE = 0,

  /**
   * indicates user is a bot
   *
   * @generated from enum value: USER_FLAG_IS_BOT = 1;
   */
  IS_BOT = 1,

  /**
   * indicate user does not accept direct/private messages
   *
   * @generated from enum value: USER_FLAG_NO_DM = 2;
   */
  NO_DM = 2,
}

/**
 * Describes the enum api.v1.UserFlag.
 */
export const UserFlagSchema: GenEnum<UserFlag> = /*@__PURE__*/
  enumDesc(file_api_v1_apiv1, 0);

/**
 * @generated from enum api.v1.UserStatus
 */
export enum UserStatus {
  /**
   * @generated from enum value: USER_STATUS_DEFAULT = 0;
   */
  DEFAULT = 0,

  /**
   * @generated from enum value: USER_STATUS_UNRESPONSIVE = 1;
   */
  UNRESPONSIVE = 1,

  /**
   * @generated from enum value: USER_STATUS_BUSY = 2;
   */
  BUSY = 2,

  /**
   * @generated from enum value: USER_STATUS_AWAY = 3;
   */
  AWAY = 3,
}

/**
 * Describes the enum api.v1.UserStatus.
 */
export const UserStatusSchema: GenEnum<UserStatus> = /*@__PURE__*/
  enumDesc(file_api_v1_apiv1, 1);

/**
 * @generated from enum api.v1.LeaveReason
 */
export enum LeaveReason {
  /**
   * @generated from enum value: LEAVE_REASON_USER_ACTION = 0;
   */
  USER_ACTION = 0,

  /**
   * @generated from enum value: LEAVE_REASON_DISCONNECTED = 1;
   */
  DISCONNECTED = 1,
}

/**
 * Describes the enum api.v1.LeaveReason.
 */
export const LeaveReasonSchema: GenEnum<LeaveReason> = /*@__PURE__*/
  enumDesc(file_api_v1_apiv1, 2);

/**
 * @generated from service api.v1.AuthService
 */
export const AuthService: GenService<{
  /**
   * @generated from rpc api.v1.AuthService.Join
   */
  join: {
    methodKind: "unary";
    input: typeof JoinRequestSchema;
    output: typeof JoinResponseSchema;
  },
  /**
   * @generated from rpc api.v1.AuthService.Keepalive
   */
  keepalive: {
    methodKind: "client_streaming";
    input: typeof EmptySchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc api.v1.AuthService.Renew
   */
  renew: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof RenewResponseSchema;
  },
  /**
   * @generated from rpc api.v1.AuthService.Leave
   */
  leave: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_api_v1_apiv1, 0);

/**
 * @generated from service api.v1.RegistryService
 */
export const RegistryService: GenService<{
  /**
   * @generated from rpc api.v1.RegistryService.ActiveUsers
   */
  activeUsers: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof ActiveUsersResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_api_v1_apiv1, 1);

/**
 * @generated from service api.v1.UserService
 */
export const UserService: GenService<{
  /**
   * @generated from rpc api.v1.UserService.UpdateDetails
   */
  updateDetails: {
    methodKind: "unary";
    input: typeof UpdateDetailsRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc api.v1.UserService.UpdateStatus
   */
  updateStatus: {
    methodKind: "unary";
    input: typeof UpdateStatusRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc api.v1.UserService.IndicateTyping
   */
  indicateTyping: {
    methodKind: "unary";
    input: typeof IndicateTypingRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc api.v1.UserService.SendChat
   */
  sendChat: {
    methodKind: "unary";
    input: typeof SendChatRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc api.v1.UserService.EditChat
   */
  editChat: {
    methodKind: "unary";
    input: typeof EditChatRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc api.v1.UserService.EmojiReply
   */
  emojiReply: {
    methodKind: "unary";
    input: typeof EmojiReplyRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_api_v1_apiv1, 2);

/**
 * @generated from service api.v1.EventsService
 */
export const EventsService: GenService<{
  /**
   * @generated from rpc api.v1.EventsService.PreviousEvents
   */
  previousEvents: {
    methodKind: "unary";
    input: typeof PreviousEventsRequestSchema;
    output: typeof PreviousEventsResponseSchema;
  },
  /**
   * @generated from rpc api.v1.EventsService.EventStream
   */
  eventStream: {
    methodKind: "server_streaming";
    input: typeof EmptySchema;
    output: typeof EventStreamResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_api_v1_apiv1, 3);

